<div class="row">
  <div id="reqChart" class="col-md-6">
  <h2> Average response time per request </h2>
  </div>
  <div id="reqChart" class="col-md-6">
  <h2> Average response time per host </h2>
  </div>
</div>
<div class="row">
  <div id="reqChart" class="col-md-6 height500">
    <svg></svg>
  </div>
  <div id="hostChart" class="col-md-6 height500">
    <svg></svg>
  </div>
</div>
<div class="row">
  <div id="reqChart" class="col-md-6">
  <h2> Average response time per api </h2>
  </div>
  <div id="reqChart" class="col-md-6">
  <h2> Average response time per service </h2>
  </div>
</div>
<div class="row">
  <div id="apiChart" class="col-md-6 height500">
    <svg></svg>
  </div>
  <div id="serviceChart" class="col-md-6 height500">
    <svg></svg>
  </div>
</div>
{{#if allValues}}
<div class="row">
  <h2> All requests </h2>
  <div id="allChart" class="height700">
  </div>
</div>
{{/if}}
<script>


var barChart = function(yAxisLabel, svgDiv, data,ht){
  var height = ht || 400;
  nv.addGraph(function(){
    var chart = nv.models.multiBarChart()
             .duration(350)
	     .rotateLabels(90)
	     .margin({bottom:200, left: 70})
	     .groupSpacing(0.1)
	     .height(height)
	     ;
    chart.reduceXTicks(false).staggerLabels(true);

    chart.xAxis
         .axisLabelDistance(5)
	 ;

    chart.yAxis
         .axisLabel(yAxisLabel)
	 .axisLabelDistance(5)
	 .tickFormat(d3.format(',.01f'))
	 ;

    d3.select(svgDiv)
      .datum(data)
      .call(chart);

    nv.utils.windowResize(chart.update);
    return chart;

  });
}
var multiChart = function(svgDiv, data, ht){
  var svg = dimple.newSvg(svgDiv, 800, 400);
  var chart = new dimple.chart(svg, data);
  chart.setBounds(60,20,680,330);
  var x = chart.addCategoryAxis("x", "time");
  var y1 = chart.addMeasureAxis("y", "timeElapsed");
  var y2 = chart.addMeasureAxis("y", "memoryUsed");
  var bars = chart.addSeries("Time taken", dimple.plot.bar, [x,y1]);
  var lines = chart.addSeries("Memory Used", dimple.plot.line, [x,y2]);
  lines.lineMarkers = true;
  bars.barGap = 0.5;
  chart.addLegend(60, 5, 680, 10, "right", lines);
  chart.draw();
}

  var requestChart = [{
    key: "By Request",
    values: {{{reqAgg}}}
  }];
  barChart("Average Time", '#reqChart svg', requestChart);
  requestChart = [{
    key: "By host",
    values: {{{host}}}
  }];
  barChart("Average Time", '#hostChart svg', requestChart);
  requestChart = [{
    key: "By Api",
    values: {{{api}}}
  }];
  barChart("Average Time", '#apiChart svg', requestChart);
  requestChart = [{
    key: "By Service",
    values: {{{service}}}
  }];
  barChart("Average Time", '#serviceChart svg', requestChart);
  var allValues = {{{all}}};
  multiChart('#allChart', allValues);
</script>
